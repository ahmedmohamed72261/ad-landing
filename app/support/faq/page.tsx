"use client"
import { useState } from "react"
import { SharedHeader } from "@/components/shared-header"
import { SharedFooter } from "@/components/shared-footer"
import { ChevronDown, ChevronUp, Search, HelpCircle, MessageCircle, Phone } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"

const faqData = [
  {
    category: "ุงูุญููุงุช ุงูุฅุนูุงููุฉ",
    questions: [
      {
        q: "ูู ูุณุชุบุฑู ุฅุนุฏุงุฏ ุญููุฉ ุฅุนูุงููุฉ ุฌุฏูุฏุฉุ",
        a: "ุนุงุฏุฉ ูุง ูุณุชุบุฑู ุฅุนุฏุงุฏ ุญููุฉ ุฅุนูุงููุฉ ุฌุฏูุฏุฉ ูู 3-5 ุฃูุงู ุนููุ ูุฐูู ูุดูู ุงูุจุญุซ ูุงูุชุญููู ูุฅุนุฏุงุฏ ุงููุญุชูู ูุงูุฅุทูุงู.",
      },
      {
        q: "ูุง ูู ุงูููุตุงุช ุงูุฅุนูุงููุฉ ุงููุฏุนููุฉุ",
        a: "ูุฏุนู ุฌููุน ุงูููุตุงุช ุงูุฑุฆูุณูุฉ: ุฌูุฌู ุฃุฏุฒุ ููุณุจููุ ุฅูุณุชุบุฑุงูุ ุชููุชุฑุ ููููุฏ ุฅูุ ุชูู ุชููุ ุณูุงุจ ุดุงุชุ ูููุชููุจ.",
      },
      {
        q: "ูู ูููููู ุฅููุงู ุงูุญููุฉ ูู ุฃู ููุชุ",
        a: "ูุนูุ ููููู ุฅููุงู ุฃู ุชุนุฏูู ุฃู ุญููุฉ ูู ุฃู ููุช ูู ุฎูุงู ููุญุฉ ุงูุชุญููุ ุฃู ุงูุชูุงุตู ูุน ูุฑูู ุงูุฏุนู.",
      },
      {
        q: "ููู ูุชู ุชุญุฏูุฏ ุงูููุฒุงููุฉ ุงูููุงุณุจุฉุ",
        a: "ูุญุฏุฏ ุงูููุฒุงููุฉ ุจูุงุกู ุนูู ุฃูุฏุงูู ุงูุชุณููููุฉุ ุญุฌู ุงูุณูู ุงููุณุชูุฏูุ ูุงูููุงูุณุฉ. ูุจุฏุฃ ุนุงุฏุฉ ุจููุฒุงููุฉ ุชุฌุฑูุจูุฉ ุซู ูููู ุจุงูุชุญุณูู.",
      },
    ],
  },
  {
    category: "ุงูููุชุฑุฉ ูุงูุฏูุน",
    questions: [
      {
        q: "ูุง ูู ุทุฑู ุงูุฏูุน ุงููุชุงุญุฉุ",
        a: "ููุจู ุงูุฏูุน ุนุจุฑ ุงูุจุทุงูุงุช ุงูุงุฆุชูุงููุฉุ ุงูุชุญููู ุงูุจูููุ ูุฏูุ ูุฃุจู ุจุงู. ุฌููุน ุงููุฏููุนุงุช ุขููุฉ ููุดูุฑุฉ.",
      },
      {
        q: "ูุชู ูุชู ุฎุตู ุฑุณูู ุงูุฎุฏูุฉุ",
        a: "ูุชู ุฎุตู ุฑุณูู ุงูุฎุฏูุฉ ุดูุฑูุงู ูู ุจุฏุงูุฉ ูู ุดูุฑุ ุฃู ุญุณุจ ุงูุงุชูุงู ุงููุจุฑู ูุนู.",
      },
      {
        q: "ูู ูููููู ุงูุญุตูู ุนูู ูุงุชูุฑุฉ ุถุฑูุจูุฉุ",
        a: "ูุนูุ ูุตุฏุฑ ููุงุชูุฑ ุถุฑูุจูุฉ ูุนุชูุฏุฉ ูุฌููุน ุงูุนููุงุก ูููุงู ูุฃูุธูุฉ ููุฆุฉ ุงูุฒูุงุฉ ูุงูุถุฑูุจุฉ ูุงูุฌูุงุฑู.",
      },
      {
        q: "ูุง ูู ุณูุงุณุฉ ุงูุงุณุชุฑุฏุงุฏุ",
        a: "ููุฏู ุถูุงู ุงุณุชุฑุฏุงุฏ ุฌุฒุฆู ุฅุฐุง ูู ุชุญูู ุญููุชู ุงูุฃูุฏุงู ุงููุชูู ุนูููุง ุฎูุงู ุงูุดูุฑ ุงูุฃููุ ูููุงู ูุดุฑูุท ุงูุถูุงู.",
      },
    ],
  },
  {
    category: "ุงูุชูุงุฑูุฑ ูุงููุชุงุฆุฌ",
    questions: [
      {
        q: "ููู ูููููู ุชุชุจุน ุฃุฏุงุก ุญููุงุชูุ",
        a: "ูููุฑ ููุญุฉ ุชุญูู ุดุงููุฉ ุชุชูุญ ูู ุชุชุจุน ุฌููุน ูุคุดุฑุงุช ุงูุฃุฏุงุก ูู ุงูููุช ุงููุนููุ ุจุงูุฅุถุงูุฉ ุฅูู ุชูุงุฑูุฑ ุฃุณุจูุนูุฉ ูุดูุฑูุฉ ููุตูุฉ.",
      },
      {
        q: "ูุง ูู ุงููุคุดุฑุงุช ุงูุชู ูุชู ููุงุณูุงุ",
        a: "ูููุณ ุฌููุน ุงููุคุดุฑุงุช ุงููููุฉ ูุซู ROASุ CPAุ CTRุ ูุนุฏู ุงูุชุญูููุ ุงููุตููุ ุงูุชูุงุนูุ ูุชูููุฉ ุงูููุฑุฉ.",
      },
      {
        q: "ูู ูููููู ุชุตุฏูุฑ ุงูุชูุงุฑูุฑุ",
        a: "ูุนูุ ููููู ุชุตุฏูุฑ ุฌููุน ุงูุชูุงุฑูุฑ ุจุตูุบ ูุฎุชููุฉ ูุซู PDFุ Excelุ ุฃู CSV ูู ููุญุฉ ุงูุชุญูู.",
      },
    ],
  },
  {
    category: "ุงูุฏุนู ุงูููู",
    questions: [
      {
        q: "ูุง ูู ุณุงุนุงุช ุนูู ุงูุฏุนู ุงููููุ",
        a: "ูุฑูู ุงูุฏุนู ูุชุงุญ ูู ุงูุฃุญุฏ ุฅูู ุงูุฎููุณ ูู 9 ุตุจุงุญุงู ุญุชู 6 ูุณุงุกู. ููุญุงูุงุช ุงูุนุงุฌูุฉุ ููููู ุงูุชูุงุตู ุนุจุฑ ูุงุชุณุงุจ.",
      },
      {
        q: "ูู ูุณุชุบุฑู ุงูุฑุฏ ุนูู ุงูุงุณุชูุณุงุฑุงุชุ",
        a: "ูุฑุฏ ุนูู ุฌููุน ุงูุงุณุชูุณุงุฑุงุช ุฎูุงู 24 ุณุงุนุฉ ูุญุฏ ุฃูุตู. ุงูุญุงูุงุช ุงูุนุงุฌูุฉ ูุชู ุงูุชุนุงูู ูุนูุง ูู ููุณ ุงูููู.",
      },
      {
        q: "ูู ุชูุฏููู ุชุฏุฑูุจ ุนูู ุงุณุชุฎุฏุงู ุงูููุตุฉุ",
        a: "ูุนูุ ููุฏู ุฌูุณุงุช ุชุฏุฑูุจูุฉ ูุฌุงููุฉ ูุฌููุน ุงูุนููุงุก ุงูุฌุฏุฏุ ุจุงูุฅุถุงูุฉ ุฅูู ููุชุจุฉ ุดุงููุฉ ูู ุงูููุฏูููุงุช ุงูุชุนููููุฉ.",
      },
    ],
  },
]

export default function FAQPage() {
  const [searchTerm, setSearchTerm] = useState("")
  const [openItems, setOpenItems] = useState<string[]>([])

  const toggleItem = (id: string) => {
    setOpenItems((prev) => (prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]))
  }

  const filteredFAQ = faqData
    .map((category) => ({
      ...category,
      questions: category.questions.filter(
        (item) =>
          item.q.toLowerCase().includes(searchTerm.toLowerCase()) ||
          item.a.toLowerCase().includes(searchTerm.toLowerCase()),
      ),
    }))
    .filter((category) => category.questions.length > 0)

  return (
    <div className="min-h-screen bg-black text-white" dir="rtl">
      <SharedHeader currentPage="ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ" />

      <main>
        {/* Hero Section */}
        <section className="relative flex min-h-[50vh] items-center justify-center overflow-hidden bg-gradient-to-br from-gray-950 via-gray-900 to-black">
          <div className="container mx-auto px-4 text-center">
            <div className="mb-6 inline-flex items-center gap-2 rounded-full bg-teal-500/20 px-4 py-2 text-teal-400">
              <HelpCircle className="h-4 w-4" />
              <span className="text-sm font-medium">ูุฑูุฒ ุงููุณุงุนุฏุฉ</span>
            </div>

            <h1 className="mb-6 text-5xl font-bold leading-tight md:text-6xl">
              ุงูุฃุณุฆูุฉ
              <span className="bg-gradient-to-r from-teal-400 to-blue-400 bg-clip-text text-transparent"> ุงูุดุงุฆุนุฉ</span>
            </h1>

            <p className="mx-auto mb-8 max-w-3xl text-lg text-gray-300 md:text-xl">
              ุฅุฌุงุจุงุช ุดุงููุฉ ุนูู ุฃูุซุฑ ุงูุฃุณุฆูุฉ ุดููุนุงู ุญูู ุฎุฏูุงุชูุง ูููุตุชูุง ุงูุฅุนูุงููุฉ
            </p>

            {/* Search Bar */}
            <div className="mx-auto max-w-md">
              <div className="relative">
                <Search className="absolute right-3 top-1/2 h-5 w-5 -translate-y-1/2 text-gray-400" />
                <Input
                  type="text"
                  placeholder="ุงุจุญุซ ูู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full rounded-full bg-gray-900/50 border-gray-700 py-3 pr-12 text-white placeholder:text-gray-400"
                />
              </div>
            </div>
          </div>
        </section>

        {/* FAQ Content */}
        <section className="py-16 md:py-24">
          <div className="container mx-auto px-4">
            {filteredFAQ.length > 0 ? (
              <div className="mx-auto max-w-4xl space-y-12">
                {filteredFAQ.map((category, categoryIndex) => (
                  <div key={categoryIndex}>
                    <h2 className="mb-6 text-2xl font-bold text-teal-400 md:text-3xl">{category.category}</h2>
                    <div className="space-y-4">
                      {category.questions.map((item, itemIndex) => {
                        const itemId = `${categoryIndex}-${itemIndex}`
                        const isOpen = openItems.includes(itemId)

                        return (
                          <div
                            key={itemIndex}
                            className="rounded-lg border border-gray-800 bg-gray-950/50 transition-colors hover:bg-gray-950/70"
                          >
                            <button
                              onClick={() => toggleItem(itemId)}
                              className="flex w-full items-center justify-between p-6 text-right"
                            >
                              <h3 className="text-lg font-semibold text-white">{item.q}</h3>
                              {isOpen ? (
                                <ChevronUp className="h-5 w-5 text-teal-400 flex-shrink-0 mr-4" />
                              ) : (
                                <ChevronDown className="h-5 w-5 text-gray-400 flex-shrink-0 mr-4" />
                              )}
                            </button>
                            {isOpen && (
                              <div className="border-t border-gray-800 px-6 pb-6">
                                <p className="pt-4 text-gray-300 leading-relaxed">{item.a}</p>
                              </div>
                            )}
                          </div>
                        )
                      })}
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="mx-auto max-w-md text-center">
                <div className="mb-4 text-6xl">๐</div>
                <h3 className="mb-2 text-xl font-semibold">ูู ูุฌุฏ ูุชุงุฆุฌ</h3>
                <p className="text-gray-400">ุฌุฑุจ ุงูุจุญุซ ุจูููุงุช ูุฎุชููุฉ ุฃู ุชุตูุญ ุงูุฃูุณุงู ุฃุฏูุงู</p>
              </div>
            )}
          </div>
        </section>

        {/* Contact CTA */}
        <section className="bg-gray-950 py-16 md:py-24">
          <div className="container mx-auto px-4 text-center">
            <h2 className="mb-6 text-3xl font-bold md:text-4xl">ูู ุชุฌุฏ ุฅุฌุงุจุฉ ูุณุคุงููุ</h2>
            <p className="mx-auto mb-8 max-w-2xl text-lg text-gray-300">
              ูุฑูู ุงูุฏุนู ุฌุงูุฒ ููุณุงุนุฏุชู ูู ุฃู ุงุณุชูุณุงุฑ. ุชูุงุตู ูุนูุง ูุณูุฑุฏ ุนููู ุฎูุงู 24 ุณุงุนุฉ
            </p>
            <div className="flex flex-col gap-4 sm:flex-row sm:justify-center">
              <Button className="rounded-full bg-teal-500 px-8 py-3 text-white transition-colors hover:bg-teal-600">
                <MessageCircle className="ml-2 h-5 w-5" />
                ุชูุงุตู ูุนูุง
              </Button>
              <Button
                variant="outline"
                className="rounded-full border-2 border-gray-600 bg-transparent px-8 py-3 text-white transition-colors hover:bg-gray-800"
              >
                <Phone className="ml-2 h-5 w-5" />
                ุทูุจ ููุงููุฉ
              </Button>
            </div>
          </div>
        </section>
      </main>

      <SharedFooter />
    </div>
  )
}
